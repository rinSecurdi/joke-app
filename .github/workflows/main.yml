name: Build and Deploy React App to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build, Test Image, and Deploy to EC2
    runs-on: ubuntu-latest

    env:
      ECR_REPOSITORY: joke-app-demo
      IMAGE_TAG: latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17.1'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests (local)
        run: npm test -- --watchAll=false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Run tests inside Docker image
        run: |
          docker run --rm ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} npm test -- --watchAll=false

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}
            export IMAGE_TAG=${{ env.IMAGE_TAG }}
            export ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}

            aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker stop react-app || true
            docker rm react-app || true
            docker run -d --name react-app -p 3000:3000 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
